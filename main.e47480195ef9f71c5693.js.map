{"version":3,"sources":["webpack:///./index.js"],"names":["refs","form","document","querySelector","nameInput","commentInput","commentsList","loginBtn","formBtn","addToLocal","comment","commentsArr","getCommentsFromLocal","push","localStorage","setItem","JSON","stringify","parse","getItem","renderComments","commentArr","value","markup","map","el","id","name","date","join","innerHTML","addEventListener","debounce","e","preventDefault","enable","classList","add","fetch","method","body","headers","then","resp","json","data","sendComments","Date","now","toLocaleDateString","toLocaleTimeString","error","text","delay","leading","trailing","window","target","localName","filteredComments","filter","parentNode"],"mappings":"0PAQMA,EAAO,CACXC,KAAMC,SAASC,cAAc,iBAC7BC,UAAWF,SAASC,cAAc,SAClCE,aAAcH,SAASC,cAAc,YACrCG,aAAcJ,SAASC,cAAc,aACrCI,SAAUL,SAASC,cAAc,aACjCK,QAASN,SAASC,cAAc,iBAqDlC,SAASM,EAAWC,GAClB,IAAMC,EAAcC,IACpBD,EAAYE,KAAKH,GACjBI,aAAaC,QAAQ,WAAYC,KAAKC,UAAUN,IAGlD,SAASC,IACP,OAAOI,KAAKE,MAAMJ,aAAaK,QAAQ,aAAe,MAGxD,SAASC,IACP,IAAMC,EAAaT,IACnBZ,EAAKI,UAAUkB,MAAQ,GACvBtB,EAAKK,aAAaiB,MAAQ,GAC1B,IAAMC,EAASF,EACZG,KAAI,SAAAC,GACH,iBAAkBA,EAAGC,GAArB,mBACMD,EAAGE,KADT,mBAEKF,EAAGG,KAFR,kBAGKH,EAAGf,QAHR,oDAODmB,KAAK,IACR7B,EAAKM,aAAawB,UAAYP,EA9BhCvB,EAAKC,KAAK8B,iBACR,SACAC,KA1BF,SAAqBC,GACnBA,EAAEC,iBAC8B,KAA5BlC,EAAKK,aAAaiB,OAQU,KAA5BtB,EAAKK,aAAaiB,QACpBtB,EAAKC,KAAKkC,OACVnC,EAAKQ,QAAQ4B,UAAUC,IAAI,WAhC/B,SAAsB3B,GACb4B,MACL,0FACA,CACEC,OAAQ,OACRC,KAAMxB,KAAKC,UAAUP,GACrB+B,QAAS,CACP,eAAgB,sBAInBC,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBF,MAAK,SAAAG,GAEJ,OADAnC,EAAQgB,GAAKmB,EAAKlB,KACXjB,KAERgC,KAAKjC,GACLiC,KAAKtB,GAwBR0B,CAPgB,CACdlB,KAAS,IAAImB,KAAKA,KAAKC,OAAOC,qBAA1B,IAAkD,IAAIF,KACxDA,KAAKC,OACLE,qBACFvB,KAAM3B,EAAKI,UAAUkB,MACrBZ,QAASV,EAAKK,aAAaiB,SAhB3B6B,gBAAM,CACJC,KAAM,iBACNC,MAAO,QAqBW,IAAK,CAAEC,SAAS,EAAMC,UAAU,KACtD,GA8BFC,OAAOzB,iBAAiB,OAAQX,GAEhCpB,EAAKM,aAAayB,iBAAiB,SAEnC,SAAuBE,GACrB,GAA2B,WAAvBA,EAAEwB,OAAOC,UACX,OAEF,IAAMC,EAAmB/C,IAAuBgD,QAAO,SAAAnC,GACrD,OAAOA,EAAGC,KAAOO,EAAEwB,OAAOI,WAAWnC,MAEvCZ,aAAaC,QAAQ,WAAYC,KAAKC,UAAU0C,IAChDvC,S","file":"main.e47480195ef9f71c5693.js","sourcesContent":["//AIzaSyCniRY8mOu8mbV8PRMWbZHKAGJrPGGPrL8\r\n\r\nimport './styles.css';\r\nimport { error } from '@pnotify/core';\r\nimport '@pnotify/core/dist/PNotify.css';\r\nimport '@pnotify/core/dist/BrightTheme.css';\r\nimport debounce from 'lodash.debounce';\r\n\r\nconst refs = {\r\n  form: document.querySelector('.comment-form'),\r\n  nameInput: document.querySelector('.name'),\r\n  commentInput: document.querySelector('.comment'),\r\n  commentsList: document.querySelector('.comments'),\r\n  loginBtn: document.querySelector('.log-btn '),\r\n  formBtn: document.querySelector('.submit-form'),\r\n};\r\n\r\nfunction sendComments(comment) {\r\n  return fetch(\r\n    'https://firstproject-b95dd-default-rtdb.europe-west1.firebasedatabase.app/comments.json',\r\n    {\r\n      method: 'POST',\r\n      body: JSON.stringify(comment),\r\n      headers: {\r\n        'content-type': 'application/json',\r\n      },\r\n    },\r\n  )\r\n    .then(resp => resp.json())\r\n    .then(data => {\r\n      comment.id = data.name;\r\n      return comment;\r\n    })\r\n    .then(addToLocal)\r\n    .then(renderComments);\r\n}\r\n\r\nfunction sendRequest(e) {\r\n  e.preventDefault();\r\n  if (refs.commentInput.value === '') {\r\n    error({\r\n      text: 'input is empty',\r\n      delay: 1000,\r\n    });\r\n    return;\r\n  }\r\n\r\n  if (refs.commentInput.value !== '') {\r\n    refs.form.enable;\r\n    refs.formBtn.classList.add('enable');\r\n  }\r\n  const comment = {\r\n    date: `${new Date(Date.now()).toLocaleDateString()} ${new Date(\r\n      Date.now(),\r\n    ).toLocaleTimeString()}`,\r\n    name: refs.nameInput.value,\r\n    comment: refs.commentInput.value,\r\n  };\r\n  sendComments(comment);\r\n}\r\n\r\nrefs.form.addEventListener(\r\n  'submit',\r\n  debounce(sendRequest, 500, { leading: true, trailing: false }),\r\n  false,\r\n);\r\n\r\nfunction addToLocal(comment) {\r\n  const commentsArr = getCommentsFromLocal();\r\n  commentsArr.push(comment);\r\n  localStorage.setItem('comments', JSON.stringify(commentsArr));\r\n}\r\n\r\nfunction getCommentsFromLocal() {\r\n  return JSON.parse(localStorage.getItem('comments') || '[]');\r\n}\r\n\r\nfunction renderComments() {\r\n  const commentArr = getCommentsFromLocal();\r\n  refs.nameInput.value = '';\r\n  refs.commentInput.value = '';\r\n  const markup = commentArr\r\n    .map(el => {\r\n      return `<li id=\"${el.id}\">  \r\n      <h3>${el.name}</h3>\r\n      <p>${el.date}</p>\r\n      <p>${el.comment}</p>\r\n      <button>delete</button>\r\n    </li>`;\r\n    })\r\n    .join('');\r\n  refs.commentsList.innerHTML = markup;\r\n}\r\n\r\nwindow.addEventListener('load', renderComments);\r\n\r\nrefs.commentsList.addEventListener('click', deleteComment);\r\n\r\nfunction deleteComment(e) {\r\n  if (e.target.localName !== 'button') {\r\n    return;\r\n  }\r\n  const filteredComments = getCommentsFromLocal().filter(el => {\r\n    return el.id !== e.target.parentNode.id;\r\n  });\r\n  localStorage.setItem('comments', JSON.stringify(filteredComments));\r\n  renderComments();\r\n}\r\n"],"sourceRoot":""}